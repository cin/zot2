#summary Zot High Level Design

= Introduction =

Zot is amazing.

= Details =
 * Zot
  * Base Component
  * Base Object
  * Base Singleton Interface
  * Zystem
   * State based tick methods
   * Can be a singleton
   * Event driven - generated from SDL events or other Zystems
   * Zystem::init() is called within the thread for the Zystem.
    * This ensures that the init occurs inside the thread.
   * All events are Zmsgs 
    * Controlled by the Zmsgq
     * Keeps one Zevent around to manage access to Zmsgq
    * Prioritized queue
    * Map of msgid to handlers
   * post/push methods are used to send and recv msg
  * Zapp : Zystem
   * Maintains and manages list of Zystems
   * OnExit cleans up all Zystems
   * Initializes GL, Renderer
  * SDLApp : Zapp
   * Initializes SDL, CEGUI, IConsole, IInput
  * Zemo : SDLApp
  * Zogger : Zystem
   * Zogger is only Zystem that uses Zmsgs at the moment.
   * Zogger is running in another thread in order to prevent file corruption.
 * ConVar
  * Console Variables used to save/load game settings.
 * Console Interface
  * Base console interface that manages all of the convars, command line, and command line arguments.
  * Zonsole uses IConsole and CEGUI interface, first working panel!!
 * Input Interface
  * Handles key, mouse, and misc input bindings and their callbacks.
  * Keeps an array of the last x (128) mouse motions.
 * Coordinate Conventions
 * MathLib
 * ZimTime
 * Renderer
  * Generic class for handling other platforms.
 * Data File Access
  * Model loading
   * Setup Textures and mesh data
 * Camera
  * width, height
  * frustum
  * fov
  * near, far
  * Camera Controllers
   * Flying/noclip, FPS, WoW
 * Terrain