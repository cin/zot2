#summary Message Handling: Storage and Processing.

= Message Handling =

general concept

Zystems communicate with each other through an event based messaging system. All of the events are based off of Zmsgs and controlled by the Zmsgq. Zmsgq is a priority queue used to abstract message handling. Additionally, Zmsgq provides mutex protection for the queue itself and is a base member and friend of Zystem. Zmsgq keeps around a Zevent to manage access to the queue.

    * Map of msgid to handlers
   * post/push methods are used to send and recv msg

handing packing order automatically so don't have to think about it when writing the classes themselves.

For those seeking further information on message handling techniques, Brandon found [http://rubyforge.org/projects/eventmachine Event Machine] the other day and is similar to the approach taken in Zot2. This also lead to reading about [http://www.cs.wustl.edu/~schmidt/ACE-overview.html ACE].

== Storage ==
  * flat list
  * keep smart pointers around to elements so new's won't have to be made all over the place
    * allows systems to determine whether or not they want to create a copy to modify

== Processing ==